<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一蓑烟雨任平生</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cocoyimasa.github.io/"/>
  <updated>2017-05-24T15:06:45.000Z</updated>
  <id>http://cocoyimasa.github.io/</id>
  
  <author>
    <name>Hesai Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue学习笔记（一）</title>
    <link href="http://cocoyimasa.github.io/2017/05/24/Vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://cocoyimasa.github.io/2017/05/24/Vue学习笔记（一）/</id>
    <published>2017-05-24T14:25:32.000Z</published>
    <updated>2017-05-24T15:06:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="本系列之缘起"><a href="#本系列之缘起" class="headerlink" title="本系列之缘起"></a>本系列之缘起</h1><p>前段时间决定做一件事：每天写一个实例，积少成多就是一个项目。从今天开始实践。</p>
<p>选定的实践目标为 ： 学会Vue，并构建中型项目。</p>
<p>这是本系列的第一篇。我不能保证会有第50篇。但是10篇总是会有的。</p>
<h1 id="配置Vue开发环境"><a href="#配置Vue开发环境" class="headerlink" title="配置Vue开发环境"></a>配置Vue开发环境</h1><p>首先安装Vue。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install vue-cli -g</div></pre></td></tr></table></figure>
<p>如果觉得每次输入sudo浪费时间，可以给全局的node模块提权：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo chmod -R 777 /usr/local/lib/node_modules/</div></pre></td></tr></table></figure>
<p>安装完成之后，就可以用vue-cli创建Vue应用了。创建完成后使用npm run dev启动。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ vue init webpack project-name</div><div class="line"></div><div class="line">$ cd project-name</div><div class="line">$ npm install</div><div class="line">$ npm run dev</div></pre></td></tr></table></figure>
<p>之后访问浏览器的<a href="http://localhost:8080" target="_blank" rel="external">http://localhost:8080</a> 可以看到Vue的欢迎界面，说明环境配置成功。</p>
<h1 id="完成第一个组件的编写"><a href="#完成第一个组件的编写" class="headerlink" title="完成第一个组件的编写"></a>完成第一个组件的编写</h1><p>观察src目录</p>
<p><img src="/images/src.png" alt="src目录"></p>
<p>可以发现vue生成的文件，components下有Hello.vue,我们可以依样画葫芦，写一个Me.vue<br>内容基本是复制粘贴，最终修改如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;template&gt;</div><div class="line">&lt;div class=&quot;me&quot;&gt;</div><div class="line">    &lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;</div><div class="line">&lt;/div&gt;</div><div class="line">&lt;/template&gt;</div><div class="line"></div><div class="line">&lt;script&gt;</div><div class="line">export default &#123;</div><div class="line">  name: &apos;me&apos;,</div><div class="line">  data () &#123;</div><div class="line">    return &#123;</div><div class="line">      msg: &apos;Hello World&apos;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>接下来有两种选择可以把我们刚写的Me.vue显示出来。</p>
<ul>
<li>1.配置到router目录下的index.js中，只需要引入Me.vue，并在routes中添加一个Me组件即可。此时<br>访问<a href="http://localhost:8080/#/Me" target="_blank" rel="external">http://localhost:8080/#/Me</a> 即可看到新加的页面。</li>
</ul>
<p>index.js中新加的内容如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">import Me from &apos;@/components/Me&apos; //add</div><div class="line">export default new Router(&#123;</div><div class="line">  routes: [</div><div class="line">    &#123;</div><div class="line">      path: &apos;/&apos;,</div><div class="line">      name: &apos;Hello&apos;,</div><div class="line">      component: Hello</div><div class="line">    &#125;,</div><div class="line">    &#123;//add</div><div class="line">      path: &apos;/Me&apos;,</div><div class="line">      name: &apos;My&apos;,</div><div class="line">      component: Me</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;)</div></pre></td></tr></table></figure></p>
<ul>
<li>2.把Me.vue添加到Hello.vue中<br>修改Hello.vue的script中内容如下：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">import Me from &apos;@/components/Me.vue&apos;</div><div class="line">export default &#123;</div><div class="line">  name: &apos;hello&apos;,</div><div class="line">  data () &#123;</div><div class="line">    return &#123;</div><div class="line">      msg: &apos;Welcome to Your Vue.js App&apos;</div><div class="line">    &#125;</div><div class="line">  &#125;,</div><div class="line">  components: &#123; Me &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>总的来说就是引入Me.vue，并添加一个字段components，内容为Me。<br>完成之后的效果如下：<br><img src="/images/show.png" alt="展示"></p>
<p>至此，完成了新加一个component的任务。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;本系列之缘起&quot;&gt;&lt;a href=&quot;#本系列之缘起&quot; class=&quot;headerlink&quot; title=&quot;本系列之缘起&quot;&gt;&lt;/a&gt;本系列之缘起&lt;/h1&gt;&lt;p&gt;前段时间决定做一件事：每天写一个实例，积少成多就是一个项目。从今天开始实践。&lt;/p&gt;
&lt;p&gt;选定的实践目标为
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>仔细一想，似乎没写过什么好文章</title>
    <link href="http://cocoyimasa.github.io/2017/05/22/%E4%BB%94%E7%BB%86%E4%B8%80%E6%83%B3%EF%BC%8C%E4%BC%BC%E4%B9%8E%E6%B2%A1%E5%86%99%E8%BF%87%E4%BB%80%E4%B9%88%E5%A5%BD%E6%96%87%E7%AB%A0/"/>
    <id>http://cocoyimasa.github.io/2017/05/22/仔细一想，似乎没写过什么好文章/</id>
    <published>2017-05-21T17:00:13.000Z</published>
    <updated>2017-05-21T17:03:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>仔细一想，似乎没写过什么好文章。</p>
<p>本来想把原来博客里的文章迁移过来，想想还是算了，写的不是很好，对人没什么启发。</p>
<p>以后还是专注于写好文章，至少要深思熟虑才要发过来。</p>
<p>烂文章写在简书的博客里烂掉好了。反正那里只有我自己知道。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;仔细一想，似乎没写过什么好文章。&lt;/p&gt;
&lt;p&gt;本来想把原来博客里的文章迁移过来，想想还是算了，写的不是很好，对人没什么启发。&lt;/p&gt;
&lt;p&gt;以后还是专注于写好文章，至少要深思熟虑才要发过来。&lt;/p&gt;
&lt;p&gt;烂文章写在简书的博客里烂掉好了。反正那里只有我自己知道。&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>博客测试</title>
    <link href="http://cocoyimasa.github.io/2017/05/21/%E5%8D%9A%E5%AE%A2%E6%B5%8B%E8%AF%95/"/>
    <id>http://cocoyimasa.github.io/2017/05/21/博客测试/</id>
    <published>2017-05-21T15:54:18.000Z</published>
    <updated>2017-05-21T16:08:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Jekyll是个坑"><a href="#Jekyll是个坑" class="headerlink" title="Jekyll是个坑"></a>Jekyll是个坑</h1><p>最终选定了博客生成系统Hexo，之前用的Jekyll，各种各样的问题烦死人，换个非官方主题报的错根本不是人能看懂的。<br>总之jekyll的体验就一个字：坑。</p>
<h1 id="Hexo的优势"><a href="#Hexo的优势" class="headerlink" title="Hexo的优势"></a>Hexo的优势</h1><p>选了Hexo才发现它流行是有原因的，首先简单易用，部署到github只需一个命令，其次主题随意换，只需要下载主题，在config中配置即可。其三，Jekyll的优点它全有。</p>
<h1 id="这其实只是一篇测试文章"><a href="#这其实只是一篇测试文章" class="headerlink" title="这其实只是一篇测试文章"></a>这其实只是一篇测试文章</h1><p>测试证明，Hexo真好用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Jekyll是个坑&quot;&gt;&lt;a href=&quot;#Jekyll是个坑&quot; class=&quot;headerlink&quot; title=&quot;Jekyll是个坑&quot;&gt;&lt;/a&gt;Jekyll是个坑&lt;/h1&gt;&lt;p&gt;最终选定了博客生成系统Hexo，之前用的Jekyll，各种各样的问题烦死人，换个非官
    
    </summary>
    
    
  </entry>
  
</feed>
